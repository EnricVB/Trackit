name: Build and Release .deb for Trackit
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      # Paso 1: Revisa el código fuente del repositorio
      - name: Check out the repository
        uses: actions/checkout@v2
        
      # Paso 2: Dar permisos de ejecución al script gradlew
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      
      # Paso 3: Configurar versión segun gradle.properties
      - name: Set version number
        id: version
        run: |
          VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      # Paso 4: Configurar JDK 22
      - name: Set up JDK 22
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '22'
      
      # Paso 5: Configurar Gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      # Paso 6: Generar el .jar usando Gradle y ShadowJar
      - name: Build .jar file using ShadowJar
        run: ./gradlew shadowJar
      
      # Paso 7: Crear la estructura de directorios para el paquete .deb
      - name: Create Debian package structure
        run: |
          mkdir -p trackit-deb/DEBIAN
          mkdir -p trackit-deb/usr/local/bin
          mkdir -p trackit-deb/usr/share/trackit
      
      # Paso 8: Mover el archivo .jar y crear el ejecutable
      - name: Copy .jar file and create executable
        run: |
          cp build/libs/trackit.jar trackit-deb/usr/share/trackit/trackit.jar
          echo '#!/bin/bash
          exec java -jar /usr/share/trackit/trackit.jar "$@"' > trackit-deb/usr/local/bin/trackit
          chmod +x trackit-deb/usr/local/bin/trackit
      
      # Paso 9: Crear el archivo de control DEBIAN/control con versión autoincremental
      - name: Create DEBIAN/control file
        run: |
          echo "Package: trackit" > trackit-deb/DEBIAN/control
          echo "Version: ${{ env.VERSION }}" >> trackit-deb/DEBIAN/control
          echo "Section: utils" >> trackit-deb/DEBIAN/control
          echo "Priority: optional" >> trackit-deb/DEBIAN/control
          echo "Architecture: all" >> trackit-deb/DEBIAN/control
          echo "Depends: default-jre | java22-runtime" >> trackit-deb/DEBIAN/control
          echo "Maintainer: Enric Velasco <enricvbufi@gmail.com>" >> trackit-deb/DEBIAN/control
          echo "Description: Trackit - Enhanced Version Control System" >> trackit-deb/DEBIAN/control
      
      # Paso 10: Crear el script postinst
      - name: Create postinst script
        run: |
          echo '#!/bin/bash
          chmod +x /usr/local/bin/trackit' > trackit-deb/DEBIAN/postinst
          chmod +x trackit-deb/DEBIAN/postinst
      
      # Paso 11: Construir el paquete .deb y dpkg
      - name: Build .deb and dpkg package
        run: |
          dpkg-deb --build trackit-deb
          mv trackit-deb.deb trackit-${{ env.VERSION }}.deb

          dpkg-scanpackages -m . > Packages
          
          rm -f Packages.gz
          gzip -9c Packages > Packages.gz
          
      # Paso 12: Listar el archivo para verificar que se ha creado
      - name: List generated files
        run: ls -la *.deb Packages.gz
      
      # Paso 13: Crear un release usando una acción más confiable
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Trackit v${{ env.VERSION }}
          body: |
            # Trackit v${{ env.VERSION }}
            
            Automatic build of .deb and Packages.gz for Linux APT
          draft: false
          prerelease: false
          files: |
            ./trackit-${{ env.VERSION }}.deb
            ./Packages.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
